[tox]
minversion = 3.0.0
envlist =
    buildfixture
    # CHECK: When the list of supported Python versions change,
    # synchronize the change with .travis.yml and appveyor.yml too.
    py27
    py34
    py35
    py36
    py37
skipsdist = true

[testenv]
skip_install = true
deps =
    six
    flake8
    jsonpath-ng
    pytest
    py27: python-dateutil
commands =
    pip install -f {distdir} -e {distdir}/nirum_fixture
    flake8 test/python
    pytest {posargs:--ff -vv} test/python

[testenv:buildfixture]
skip_install = true
deps =
passenv = *
whitelist_externals =
    stack
commands =
    stack exec -- nirum -o {distdir}/nirum_fixture -t python test/nirum_fixture

[testenv:devruntime]
; Use this when the tests against the Python source code generated by
; the compiler require the bleeding-edge version of nirum-python runtime
; (which is not released yet).
skip_install = true
deps =
    wget >= 3.2
    wheel >= 0.29.0
changedir = {envtmpdir}
whitelist_externals =
    mkdir
commands =
    python -m wget -o devruntime.zip https://github.com/{env:DEVRUNTIME_REPO:nirum-lang/nirum-python}/archive/{env:DEVRUNTIME_REF:master}.zip
    python -m zipfile -e devruntime.zip .
    python -c 'import glob, os.path; [os.rename(f, os.path.join(".", os.path.basename(f))) for f in glob.glob("nirum-python-*/*")]'
    python setup.py sdist bdist_wheel
    mkdir {distdir}
    python -c 'import glob, os, sys; [os.rename(f, os.path.join(sys.argv[1], os.path.basename(f))) for f in glob.glob("dist/nirum-*")]' {distdir}
